networks:
  default:
    name: keycloak
    driver: overlay
    attachable: true

volumes:
  kc-data:
  filebeat-data:


services:
  keycloak:
    image: skulpture/authnz:${KEYCLOAK_VERSION}
    hostname: keycloak.{{.Task.Slot}}
    build:
      context: keycloak/
      args:
        KEYCLOAK_VERSION: ${KEYCLOAK_VERSION}
        KEYCLOAK_CACHE: ispn
        KEYCLOAK_CACHE_STACK: kubernetes
        KEYCLOAK_DB: ${KC_DB}
    restart: unless-stopped
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB_URL: ${KC_DB_URL}
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_HOSTNAME: ${KC_HOSTNAME}
      KC_HTTP_ENABLED: "true"
      JAVA_OPTS_APPEND: "-Djgroups.dns.query=tasks.keycloak -Djgroups.bind_addr=match-address:10.0.2.*"
      OTEL_SERVICE_NAME: keycloak
      OTEL_TRACES_EXPORTER: otlp
      OTEL_METRICS_EXPORTER: otlp
      OTEL_EXPORTER_OTLP_ENDPOINT: ${OTEL_EXPORTER_OTLP_ENDPOINT}
      OTEL_EXPORTER_OTLP_HEADERS: "Authorization ${OTEL_EXPORTER_OTLP_AUTH_TOKEN}"
      OTEL_RESOURCE_ATTRIBUTES: "deployment.environment=${JAVA_ENV}"
    command: "start --optimized --proxy-headers xforwarded"
    deploy:
      mode: replicated
      replicas: 3
      endpoint_mode: dnsrr

  logstash:
    image: elastdocker/logstash:${ELK_VERSION}
    build:
      context: logstash/
      args:
        ELK_VERSION: ${ELK_VERSION}
    restart: unless-stopped
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    environment:
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ELASTICSEARCH_HOST_PORT: https://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}
      LS_JAVA_OPTS: "-Xmx${LOGSTASH_HEAP} -Xms${LOGSTASH_HEAP} -Dlog4j2.formatMsgNoLookups=true"
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-s",
          "-XGET",
          "http://127.0.0.1:9600"
        ]
    deploy:
      mode: replicated
      replicas: 1

  filebeat:
    image: docker.elastic.co/beats/filebeat:${ELK_VERSION}
    restart: always
    # -e flag to log to stderr and disable syslog/file output
    command: -e --strict.perms=false
    user: root
    environment:
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      KIBANA_HOST_PORT: https://${KIBANA_HOST}:${KIBANA_PORT}
      ELASTICSEARCH_HOST_PORT: https://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}
    volumes:
      - ./filebeat/filebeat.docker.logs.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat-data:/var/lib/filebeat/data
    deploy:
      mode: replicated
      replicas: 1
