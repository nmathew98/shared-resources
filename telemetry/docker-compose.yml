# To Join any other app setup using another network, change name and set external = true
networks:
  default:
    name: elastic
    driver: overlay
    attachable: true

# will contain all elasticsearch data.
volumes:
  elasticsearch-data:
  filebeat-data:


secrets:
  elasticsearch.keystore:
    file: ${ELASTIC_SECRETS_DIR}/keystore/elasticsearch.keystore
  elasticsearch.service_tokens:
    file: ${ELASTIC_SECRETS_DIR}/service_tokens
  elastic.ca:
    file: ${ELASTIC_SECRETS_DIR}/certs/ca/ca.crt
  elasticsearch.certificate:
    file: ${ELASTIC_SECRETS_DIR}/certs/elasticsearch/elasticsearch.crt
  elasticsearch.key:
    file: ${ELASTIC_SECRETS_DIR}/certs/elasticsearch/elasticsearch.key
  kibana.certificate:
    file: ${ELASTIC_SECRETS_DIR}/certs/kibana/kibana.crt
  kibana.key:
    file: ${ELASTIC_SECRETS_DIR}/certs/kibana/kibana.key
  apm-server.certificate:
    file: ${ELASTIC_SECRETS_DIR}/certs/apm-server/apm-server.crt
  apm-server.key:
    file: ${ELASTIC_SECRETS_DIR}/certs/apm-server/apm-server.key
  proxy.certificate:
    file: ${PROXY_CERT_PATH}
  proxy.key:
    file: ${PROXY_KEY_PATH}

services:
  proxy:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - target: 443
        published: 443
      - target: 2053
        published: 2053
      - target: 2083
        published: 2083
    deploy:
      mode: replicated
      replicas: 2
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    secrets:
      - source: proxy.certificate
        target: /certs/fullchain.pem
      - source: proxy.key
        target: /certs/privkey.pem
    ulimits:
      nofile:
        soft: 20000
        hard: 20000
    depends_on:
      - elasticsearch
      - apm-server
      - kibana

  elasticsearch:
    image: skulpture/elasticsearch:${TAG:-latest}
    restart: unless-stopped
    environment:
      network.publish_host: _eth0_
      node.name: telemetry_elasticsearch.{{.Task.Slot}}
      path.data: ./data/elasticsearch.{{.Task.Slot}}
      discovery.seed_hosts: tasks.elasticsearch
      cluster.initial_master_nodes: telemetry_elasticsearch.1,telemetry_elasticsearch.2,telemetry_elasticsearch.3
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ELASTIC_CLUSTER_NAME: ${ELASTIC_CLUSTER_NAME}
      ELASTICSEARCH_PORT: ${ELASTICSEARCH_PORT}
      ES_JAVA_OPTS: "-Xmx${ELASTICSEARCH_HEAP} -Xms${ELASTICSEARCH_HEAP} -Des.enforce.bootstrap.checks=true -Dlog4j2.formatMsgNoLookups=true"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch/config/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties
    secrets:
      - source: elasticsearch.keystore
        target: /usr/share/elasticsearch/config/elasticsearch.keystore
      - source: elasticsearch.service_tokens
        target: /usr/share/elasticsearch/config/service_tokens
      - source: elastic.ca
        target: /usr/share/elasticsearch/config/certs/ca.crt
      - source: elasticsearch.certificate
        target: /usr/share/elasticsearch/config/certs/elasticsearch.crt
      - source: elasticsearch.key
        target: /usr/share/elasticsearch/config/certs/elasticsearch.key
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 200000
        hard: 200000
    healthcheck:
      test: [ "CMD", "sh", "-c", "curl -sf --insecure https://$ELASTIC_USERNAME:$ELASTIC_PASSWORD@localhost:$ELASTICSEARCH_PORT/_cat/health | grep -ioE 'green|yellow' || echo 'not green/yellow cluster status'" ]
    deploy:
      mode: replicated
      replicas: 3

  kibana:
    image: skulpture/kibana:${TAG:-latest}
    restart: unless-stopped
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
    environment:
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ELASTICSEARCH_HOST_PORT: https://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}
      KIBANA_PORT: ${KIBANA_PORT}
      KIBANA_PUBLIC_BASE_URL: ${KIBANA_PUBLIC_BASE_URL}
    env_file:
      - ${ELASTIC_SECRETS_DIR}/.env.kibana.token
    secrets:
      - source: elastic.ca
        target: /certs/ca.crt
      - source: kibana.certificate
        target: /certs/kibana.crt
      - source: kibana.key
        target: /certs/kibana.key
    deploy:
      mode: replicated
      replicas: 2
    depends_on:
      - elasticsearch
    healthcheck:
      test: [ "CMD", "curl", "--insecure", "-sf", "-XGET", "https://127.0.0.1:5601" ]

  apm-server:
    image: skulpture/apm-server:${TAG:-latest}
    restart: unless-stopped
    volumes:
      - ./apm-server/config/apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
    environment:
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ELASTICSEARCH_HOST_PORT: https://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}
      ELASTIC_APM_SECRET_TOKEN: ${ELASTIC_APM_SECRET_TOKEN}
    secrets:
      - source: elastic.ca
        target: /certs/ca.crt
      - source: apm-server.certificate
        target: /certs/apm-server.crt
      - source: apm-server.key
        target: /certs/apm-server.key
    deploy:
      mode: replicated
      replicas: 2
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:${ELK_VERSION}
    restart: unless-stopped
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    secrets:
      - source: elastic.ca
        target: /certs/ca.crt
    environment:
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ELASTICSEARCH_HOST_PORT: https://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}
      LS_JAVA_OPTS: "-Xmx${LOGSTASH_HEAP} -Xms${LOGSTASH_HEAP} -Dlog4j2.formatMsgNoLookups=true"
    healthcheck:
      test: [ "CMD", "curl", "-sf", "-XGET", "http://127.0.0.1:9600" ]
    depends_on:
      - elasticsearch
    deploy:
      mode: replicated
      replicas: 0 # 1

  filebeat:
    image: docker.elastic.co/beats/filebeat:${ELK_VERSION}
    restart: unless-stopped
    # -e flag to log to stderr and disable syslog/file output
    command: -e --strict.perms=false
    user: root
    environment:
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      KIBANA_HOST_PORT: ${KIBANA_HOST}:${KIBANA_PORT}
      ELASTICSEARCH_HOST_PORT: https://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}
    volumes:
      - ./filebeat/filebeat.docker.logs.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat-data:/var/lib/filebeat/data
    deploy:
      mode: replicated
      replicas: 0 # 1
    healthcheck:
      test: [ "CMD", "curl", "-sf", "-XGET", "localhost:5066/?pretty" ]
    depends_on:
      - elasticsearch
      - apm-server
      - kibana
