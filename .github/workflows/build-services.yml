name: Build services

on:
  pull_request:
    branches: [master, staging, dev]
  workflow_dispatch:

env:
  BRANCH_NAME: ${{ github.base_ref || github.ref_name }}

jobs:
  build-authnz:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Build Docker image: authnz"
        uses: docker/build-push-action@v5
        env:
          TAG: ${{ (env.BRANCH_NAME == 'master' && 'latest') || env.BRANCH_NAME }}
        with:
          context: "{{defaultContext}}:authnz/keycloak"
          platforms: linux/amd64,linux/arm64
          build-contexts: |
            theme=./authnz-theme
          push: false
          build-args: |
            KEYCLOAK_VERSION=${{ vars.KEYCLOAK_VERSION }}
            KEYCLOAK_DB=${{ vars.KEYCLOAK_DB }}
            KEYCLOAK_FEATURES=persistent-user-sessions
            KEYCLOAK_CACHE=ispn
            KEYCLOAK_CACHE_STACK=kubernetes
          tags: |
            skulpture/authnz:${{ env.TAG }}

  build-elasticsearch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Build Docker image: elasticsearch"
        uses: docker/build-push-action@v5
        env:
          TAG: ${{ (env.BRANCH_NAME == 'master' && 'latest') || env.BRANCH_NAME }}
        with:
          context: "{{defaultContext}}:telemetry/elasticsearch"
          platforms: linux/amd64,linux/arm64
          push: false
          build-args: |
            ELK_VERSION=${{ vars.ELK_VERSION }}
          tags: |
            skulpture/elasticsearch:${{ env.TAG }}

  build-kibana:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Build Docker image: kibana"
        uses: docker/build-push-action@v5
        env:
          TAG: ${{ (env.BRANCH_NAME == 'master' && 'latest') || env.BRANCH_NAME }}
        with:
          context: "{{defaultContext}}:telemetry/kibana"
          platforms: linux/amd64,linux/arm64
          push: false
          build-args: |
            ELK_VERSION=${{ vars.ELK_VERSION }}
          tags: |
            skulpture/kibana:${{ env.TAG }}

  build-apm-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Build Docker image: apm-server"
        uses: docker/build-push-action@v5
        env:
          TAG: ${{ (env.BRANCH_NAME == 'master' && 'latest') || env.BRANCH_NAME }}
        with:
          context: "{{defaultContext}}:telemetry/apm-server"
          platforms: linux/amd64,linux/arm64
          push: false
          build-args: |
            ELK_VERSION=${{ vars.ELK_VERSION }}
          tags: |
            skulpture/apm-server:${{ env.TAG }}

  build-kryptos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Build Docker image: kryptos"
        uses: docker/build-push-action@v5
        env:
          TAG: ${{ (env.BRANCH_NAME == 'master' && 'latest') || env.BRANCH_NAME }}
        with:
          context: "{{defaultContext}}:kryptos"
          platforms: linux/amd64,linux/arm64
          push: false
          tags: |
            skulpture/kryptos:${{ env.TAG }}

  build-authnz-service-proxy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Build Docker image: authnz-service-proxy"
        uses: docker/build-push-action@v5
        env:
          TAG: ${{ (env.BRANCH_NAME == 'master' && 'latest') || env.BRANCH_NAME }}
        with:
          context: "{{defaultContext}}:authnz-service-proxy"
          platforms: linux/amd64,linux/arm64
          push: false
          tags: |
            skulpture/authnz-service-proxy:${{ env.TAG }}
